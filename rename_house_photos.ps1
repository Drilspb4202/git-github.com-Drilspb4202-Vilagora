# üè† –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–æ–º–∞
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ –≤ –ø–∞–ø–∫–µ –ø–æ —Å—Ö–µ–º–µ house-1.jpg, house-2.jpg, etc.

param(
    [string]$FolderPath = ".\public\images\accommodation",
    [string]$Prefix = "house"
)

Write-Host "üè† –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–ò–ï –§–û–¢–û–ì–†–ê–§–ò–ô –î–û–ú–ê" -ForegroundColor Green
Write-Host "==================================" -ForegroundColor Green
Write-Host ""

if (!(Test-Path $FolderPath)) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $FolderPath" -ForegroundColor Red
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit
}

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ JPG —Ñ–∞–π–ª—ã
$images = Get-ChildItem -Path $FolderPath -Filter "*.jpg" -File | Sort-Object Name

if ($images.Count -eq 0) {
    Write-Host "‚ùå JPG —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: $FolderPath" -ForegroundColor Red
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit
}

Write-Host "üìä –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $($images.Count)" -ForegroundColor Cyan
Write-Host "üìÅ –ü–∞–ø–∫–∞: $FolderPath" -ForegroundColor Cyan
Write-Host "üè∑Ô∏è –ü—Ä–µ—Ñ–∏–∫—Å: $Prefix" -ForegroundColor Cyan
Write-Host ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
Write-Host "üìã –¢–ï–ö–£–©–ò–ï –§–ê–ô–õ–´:" -ForegroundColor Yellow
for ($i = 0; $i -lt $images.Count; $i++) {
    Write-Host "   $($i + 1). $($images[$i].Name)" -ForegroundColor White
}

Write-Host ""
$confirm = Read-Host "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã? (y/N)"

if ($confirm -ne "y" -and $confirm -ne "Y") {
    Write-Host "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞" -ForegroundColor Red
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit
}

Write-Host ""
Write-Host "üîÑ –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–ò–ï..." -ForegroundColor Yellow

$renamed = 0
$errors = 0

for ($i = 0; $i -lt $images.Count; $i++) {
    $oldName = $images[$i].Name
    $newName = "$Prefix-$($i + 1).jpg"
    $oldPath = $images[$i].FullName
    $newPath = Join-Path $FolderPath $newName
    
    try {
        if ($oldName -ne $newName) {
            Rename-Item -Path $oldPath -NewName $newName -Force
            Write-Host "   ‚úÖ $oldName ‚Üí $newName" -ForegroundColor Green
            $renamed++
        } else {
            Write-Host "   ‚è≠Ô∏è $oldName (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è)" -ForegroundColor Gray
        }
    }
    catch {
        Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è $oldName : $($_.Exception.Message)" -ForegroundColor Red
        $errors++
    }
}

Write-Host ""
Write-Host "üéâ –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!" -ForegroundColor Green
Write-Host "=============================" -ForegroundColor Green
Write-Host "‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: $renamed" -ForegroundColor Green
Write-Host "‚ùå –û—à–∏–±–æ–∫: $errors" -ForegroundColor Red

if ($renamed -gt 0) {
    Write-Host ""
    Write-Host "üìã –†–ï–ó–£–õ–¨–¢–ê–¢:" -ForegroundColor Yellow
    $finalImages = Get-ChildItem -Path $FolderPath -Filter "$Prefix-*.jpg" -File | Sort-Object Name
    for ($i = 0; $i -lt $finalImages.Count; $i++) {
        Write-Host "   $($i + 1). $($finalImages[$i].Name)" -ForegroundColor Cyan
    }
}

Read-Host "`n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
